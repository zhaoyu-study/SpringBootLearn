{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\n/*import store from \"@/store\"*/\n\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  name: 'Manage',\n  component: () => import('../views/Manage.vue'),\n  redirect: \"/home\",\n  //重定向\n  children: [{\n    path: 'user',\n    name: 'User',\n    component: () => import('../views/User.vue')\n  }, {\n    path: 'home',\n    name: 'Home',\n    component: () => import('../views/Home.vue')\n  }]\n}, {\n  path: '/about',\n  name: 'about',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */'../views/AboutView.vue')\n}, {\n  path: '/login',\n  name: 'login',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */'../views/Login.vue')\n}, {\n  path: '/register',\n  name: 'register',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */'../views/Register.vue')\n}, {\n  path: '/person',\n  name: 'person',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */'../views/Person.vue')\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\n\n/*// 路由守卫\nrouter.beforeEach((to, from, next) => {\n  localStorage.setItem(\"currentPathName\", to.name)  // 设置当前的路由名称，为了在Header组件中去使用\n  store.commit(\"setPath\")  // 触发store的数据更新\n  next()  // 放行路由\n})*/\n\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","use","routes","path","name","component","redirect","children","router","mode","base","process","env","BASE_URL"],"sources":["D:/JAVA/java_learn/2_webstudy/html/idea_web/SpringBootLearn/vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\n/*import store from \"@/store\"*/\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Manage',\n    component: () => import('../views/Manage.vue'),\n    redirect:\"/home\", //重定向\n    children:[\n      {\n        path: 'user',\n        name: 'User',\n        component: () => import('../views/User.vue'),\n      },\n      {\n        path: 'home',\n        name: 'Home',\n        component: () => import('../views/Home.vue'),\n      }\n\n    ]\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n  },\n  {\n    path: '/login',\n    name: 'login',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/Login.vue')\n  },\n  {\n    path: '/register',\n    name: 'register',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/Register.vue')\n  },\n  {\n    path: '/person',\n    name: 'person',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/Person.vue')\n  },\n\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\n/*// 路由守卫\nrouter.beforeEach((to, from, next) => {\n  localStorage.setItem(\"currentPathName\", to.name)  // 设置当前的路由名称，为了在Header组件中去使用\n  store.commit(\"setPath\")  // 触发store的数据更新\n  next()  // 放行路由\n})*/\n\nexport default router\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC;;AAEAD,GAAG,CAACE,GAAG,CAACD,SAAS,CAAC;AAElB,MAAME,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAE,MAAM,MAAM,CAAC,qBAAqB,CAAC;EAC9CC,QAAQ,EAAC,OAAO;EAAE;EAClBC,QAAQ,EAAC,CACP;IACEJ,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE,MAAM,MAAM,CAAC,mBAAmB;EAC7C,CAAC,EACD;IACEF,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE,MAAM,MAAM,CAAC,mBAAmB;EAC7C,CAAC;AAGL,CAAC,EACD;EACEF,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACb;EACA;EACA;EACAC,SAAS,EAAE,MAAM,MAAM,EAAC,+BAAgC,wBAAwB;AAClF,CAAC,EACD;EACEF,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACb;EACA;EACA;EACAC,SAAS,EAAE,MAAM,MAAM,EAAC,+BAAgC,oBAAoB;AAC9E,CAAC,EACD;EACEF,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChB;EACA;EACA;EACAC,SAAS,EAAE,MAAM,MAAM,EAAC,+BAAgC,uBAAuB;AACjF,CAAC,EACD;EACEF,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACd;EACA;EACA;EACAC,SAAS,EAAE,MAAM,MAAM,EAAC,+BAAgC,qBAAqB;AAC/E,CAAC,CAEF;AAED,MAAMG,MAAM,GAAG,IAAIR,SAAS,CAAC;EAC3BS,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1BX;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeM,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}