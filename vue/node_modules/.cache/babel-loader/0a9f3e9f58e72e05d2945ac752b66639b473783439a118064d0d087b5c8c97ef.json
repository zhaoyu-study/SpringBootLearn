{"ast":null,"code":"export default {\n  name: \"File\",\n  data() {\n    return {\n      fileName: \"\",\n      tableData: [],\n      total: 0,\n      pageNo: 1,\n      pageSize: 10,\n      multipleSelection: []\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    load() {\n      this.request.get(\"http://localhost:9090/file/page\", {\n        params: {\n          pageNo: this.pageNo,\n          pageSize: this.pageSize,\n          uName: this.fileName\n        }\n      }).then(res => {\n        console.log(res);\n        this.tableData = res.data.data;\n        this.total = res.data.total;\n      });\n    },\n    handleSelectionChange(val) {\n      console.log(val);\n      this.multipleSelection = val;\n    },\n    delBatch() {\n      let ids = this.multipleSelection.map(v => v.fileid); //对象数组[{},{},{}]变成 [1,2,3]\n      console.log(ids);\n      this.deleteBatchData(ids);\n    },\n    async deleteBatchData(ids) {\n      const info = await this.$confirm('此操作将永久删除所选文件, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n        center: true\n      }).catch(err => err);\n      if (info !== \"confirm\") {\n        return this.$message.error('已取消删除');\n      }\n      await this.request.delete(\"http://localhost:9090/file/del/batch\", {\n        data: ids\n      }).then(res => {\n        if (res) {\n          this.$message.success(\"删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      });\n    },\n    async deleteData(fileid) {\n      const info = await this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n        center: true\n      }).catch(err => err);\n      if (info !== \"confirm\") {\n        return this.$message.error('已取消删除');\n      }\n      // const {data:res}=await this.request.delete(\"http://localhost:9090/user/\"+uid).then(res =>{\n      await this.request.delete(\"http://localhost:9090/file/del\" + fileid).then(res => {\n        if (res) {\n          this.$message.success(\"删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      });\n    },\n    handleCurrentChange(pageNo) {\n      console.log(pageNo);\n      this.pageNo = pageNo;\n      this.load();\n    },\n    handleSizeChange(pageSize) {\n      console.log(pageSize);\n      this.pageSize = pageSize;\n      this.load();\n    },\n    handleImportSuccess() {\n      this.$message.success(\"添加成功\");\n      this.load();\n    },\n    handleImportError() {\n      this.$message.error(\"添加失败\");\n    }\n    /*    exportOut(){\r\n          window.open(\"http://localhost:9090/user/export\")\r\n        }*/\n  }\n};","map":{"version":3,"mappings":"AA+DA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACA;QACAC;UACAN;UACAC;UACAM;QACA;MACA;QACAC;QACA;QACA;MACA;IACA;IAEAC;MACAD;MACA;IACA;IACAE;MACA;MACAF;MACA;IACA;IACA;MACA;QACAG;QACAC;QACAC;QACAC;MAEA;MACA;QACA;MACA;MACA;QAAAlB;MAAA;QACA;UACA;UACA;QACA;UACA;QACA;MACA;IAEA;IAEA;MACA;QACAe;QACAC;QACAC;QACAC;MAEA;MACA;QACA;MACA;MACA;MACA;QACA;UACA;UACA;QACA;UACA;QACA;MACA;IAEA;IACAC;MACAP;MACA;MACA;IACA;IACAQ;MACAR;MACA;MACA;IACA;IACAS;MACA;MACA;IACA;IACAC;MACA;IACA;IACA;AACA;AACA;EAEA;AAEA","names":["name","data","fileName","tableData","total","pageNo","pageSize","multipleSelection","created","methods","load","params","uName","console","handleSelectionChange","delBatch","confirmButtonText","cancelButtonText","type","center","handleCurrentChange","handleSizeChange","handleImportSuccess","handleImportError"],"sourceRoot":"src/views","sources":["File.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"padding: 10px 0\">\r\n      <el-input v-model=\"fileName\" style=\"width: 300px\" placeholder=\"请输入文件名\" suffix-icon=\"el-icon-search\" clearable @keydown.enter.native=\"load\"></el-input>\r\n      <el-button style=\"margin-left: 10px\" type=\"primary\" @click=\"load\">search</el-button>\r\n    </div>\r\n\r\n    <div style=\"padding: 10px 0\">\r\n      <el-button type=\"primary\" @click=\"delBatch\">批量删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n\r\n      <el-upload\r\n          class=\"upload-demo\"\r\n          action=\"http://localhost:9090/file/upload\"\r\n          :auto-upload=true\r\n          :show-file-list=\"false\"\r\n          :limit=\"1\"\r\n          accept=\"xlsx\"\r\n          :on-success=\"handleImportSuccess\"\r\n          :on-error=\"handleImportError\"\r\n          style=\"display: inline-block\">\r\n        <el-button type=\"primary\" style=\"margin-left: 10px\">增添文件<i class=\"el-icon-upload el-icon--right\"></i></el-button>\r\n      </el-upload>\r\n<!--      <el-button type=\"primary\"  style=\"margin-left: 10px\" @click=\"exportOut\" >导出文件列表 <i class=\"el-icon-download el-icon&#45;&#45;right\"></i></el-button>-->\r\n    </div>\r\n\r\n    <el-table :data=\"tableData\" border stripe :header-cell-class-name=\"'headerBg'\" @selection-change=\"handleSelectionChange\">\r\n      <el-table-column width=\"50\" type=\"selection\" align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"fileSid\" label=\"ID\" width=\"80\" >\r\n      </el-table-column>\r\n      <el-table-column prop=\"fileId\" label=\"ID\" width=\"80\" v-if=\"false\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"fileName\" label=\"文件名\" width=\"140\" >\r\n      </el-table-column>\r\n      <el-table-column prop=\"fileType\" label=\"文件类型\" width=\"120\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"fileSize\" label=\"文件大小\">\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button >\r\n            <el-link href=scope.row.fileUrl target=\"_blank\">下载<i class=\"el-icon-download el-icon--right\"></i></el-link>\r\n          </el-button>\r\n          <el-button type=\"danger\" @click=\"deleteData(scope.row.fileid)\">删除<i class=\"el-icon-delete\"></i></el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div style=\"padding: 10px 0\">\r\n      <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"pageNo\"\r\n          :page-sizes=\"[5, 10]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=total>\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"File\",\r\n  data(){\r\n    return{\r\n      fileName:\"\",\r\n      tableData: [],\r\n      total: 0,\r\n      pageNo:1,\r\n      pageSize:10,\r\n      multipleSelection:[],\r\n    }\r\n  },\r\n  created() {\r\n    this.load()\r\n  },\r\n  methods:{\r\n    load(){\r\n      this.request.get(\"http://localhost:9090/file/page\",{\r\n        params:{\r\n          pageNo:this.pageNo,\r\n          pageSize:this.pageSize,\r\n          uName:this.fileName\r\n        }\r\n      }).then(res =>{\r\n        console.log(res);\r\n        this.tableData = res.data.data;\r\n        this.total=res.data.total;\r\n      })\r\n    },\r\n\r\n    handleSelectionChange(val){\r\n      console.log(val)\r\n      this.multipleSelection=val\r\n    },\r\n    delBatch(){\r\n      let ids=this.multipleSelection.map(v => v.fileid) //对象数组[{},{},{}]变成 [1,2,3]\r\n      console.log(ids)\r\n      this.deleteBatchData(ids)\r\n    },\r\n    async deleteBatchData(ids){\r\n      const info = await this.$confirm('此操作将永久删除所选文件, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n        center: true,\r\n\r\n      }).catch(err=>err)\r\n      if (info!==\"confirm\"){\r\n        return this.$message.error('已取消删除')\r\n      }\r\n      await this.request.delete(\"http://localhost:9090/file/del/batch\",{data:ids}).then(res =>{\r\n        if(res){\r\n          this.$message.success(\"删除成功\")\r\n          this.load()\r\n        }else {\r\n          this.$message.error(\"删除失败\")\r\n        }\r\n      })\r\n\r\n    },\r\n\r\n    async deleteData(fileid){\r\n      const info = await this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n        center: true,\r\n\r\n      }).catch(err=>err)\r\n      if (info!==\"confirm\"){\r\n        return this.$message.error('已取消删除')\r\n      }\r\n      // const {data:res}=await this.request.delete(\"http://localhost:9090/user/\"+uid).then(res =>{\r\n      await this.request.delete(\"http://localhost:9090/file/del\"+fileid).then(res =>{\r\n        if(res){\r\n          this.$message.success(\"删除成功\")\r\n          this.load()\r\n        }else {\r\n          this.$message.error(\"删除失败\")\r\n        }\r\n      })\r\n\r\n    },\r\n    handleCurrentChange(pageNo){\r\n      console.log(pageNo)\r\n      this.pageNo=pageNo\r\n      this.load()\r\n    },\r\n    handleSizeChange(pageSize){\r\n      console.log(pageSize)\r\n      this.pageSize=pageSize\r\n      this.load()\r\n    },\r\n    handleImportSuccess(){\r\n      this.$message.success(\"添加成功\")\r\n      this.load()\r\n    },\r\n    handleImportError(){\r\n      this.$message.error(\"添加失败\")\r\n    },\r\n/*    exportOut(){\r\n      window.open(\"http://localhost:9090/user/export\")\r\n    }*/\r\n\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}